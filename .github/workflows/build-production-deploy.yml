name: Build and (optionally) deploy

on:
  push:

env:
  IMAGE_NAME: bullinger-citizen-science

jobs:
  build_and_push_to_registry:
    name: Build Docker image and (optionally) push to registry
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"
      - name: (main branch only) Log in to registry
        if: github.ref == 'refs/heads/main'
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
      - name: (main branch only) Push image
        if: github.ref == 'refs/heads/main'
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  deploy_to_production:
    name: (main branch only) Deploy to production
    runs-on: ubuntu-latest
    needs: build_and_push_to_registry
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Create SSH key
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          sudo chmod 600 ~/.ssh/id_rsa
          echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
          printf '%s\n' "Host $SSH_HOST" "HostName $SSH_HOST" "ProxyJump $JUMP_USER_AT_HOST" > ~/.ssh/config
        shell: bash
        env:
          SSH_PRIVATE_KEY: ${{secrets.PROD_SSH_PRIVATE_KEY}}
          SSH_KNOWN_HOSTS: ${{secrets.PROD_SSH_KNOWN_HOSTS}}
          SSH_HOST: ${{ secrets.PROD_SSH_HOST }}
          JUMP_USER_AT_HOST: ${{ secrets.PROD_SSH_JUMP_USER_AT_HOST }}
      - name: Deploy docker container to staging server
        env:
          SSH_USER_AT_HOST: ${{ secrets.PROD_SSH_USER_AT_HOST }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ssh $SSH_USER_AT_HOST mkdir -p citizen-science
          scp deploy/deploy.sh $SSH_USER_AT_HOST:citizen-science
          scp deploy/docker-compose.yml $SSH_USER_AT_HOST:citizen-science
          scp deploy/docker-stack-wait.sh $SSH_USER_AT_HOST:citizen-science
          ssh $SSH_USER_AT_HOST GITHUB_TOKEN=$GITHUB_TOKEN sh citizen-science/deploy.sh
